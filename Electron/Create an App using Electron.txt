* Create an App using Electron 

1. Install Node.js
2. create a folder called as "App" or name whatever you want
3. open cmd
4. now go to the folder of you project like "cd.." and so on to the project directory and then to you created folder in this case "App"
cd your-project/App/
5. enter this command "npm init -y"
6. then this command "npm install electron --save-dev"
7. then create a index.js inside the "App" folder
8. And add these lines of code to that index.js file

const { app, BrowserWindow, screen, Menu } = require('electron');
const path = require('path');

function createWindow() {
  const { width, height } = screen.getPrimaryDisplay().workAreaSize;

  const emptyMenu = Menu.buildFromTemplate([]);

  const win = new BrowserWindow({
    width: 1800,
    height: 780,
    frame: true,
    autoHideMenuBar: true,
    resizable: false,
    maximizable: false,
    icon: path.join(app.getAppPath(), 'Evelina.ico'), // Use app.getAppPath() to get the resources directory
    webPreferences: {
      nodeIntegration: false
    }
  });
  

  win.loadURL('https://evelina.pages.dev/');

  // Set window margins and padding to 0
  win.webContents.on('did-finish-load', () => {
    win.webContents.insertCSS(`
      html, body, #app {
        margin: 0;
        padding: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
      }
    `);
  });

  // Listen for maximize event to adjust the window size
  win.on('maximize', () => {
    const { width, height } = screen.getPrimaryDisplay().workAreaSize;
    win.setSize(width, height);
  });
}

app.whenReady().then(createWindow);

9. And clear the existing package.json and add this code 
{
  "name": "Win booster",
  "version": "1.0.0",
  "description": "A windows exclusive package",
  "main": "index.js",
  "scripts": {
    "start": "electron .",
    "package": "electron-packager . --platform=win32 --arch=x64 --out=dist --overwrite"
  },
  "keywords": [],
  "author": "Microsoft",
  "license": "ISC",
  "devDependencies": {
    "electron": "^16.0.0"
  }
}


10. Once all the testing is over, It's now time to extract the app
11. enter this command in the cmd in the same location where the index.js is present.
npm install -g electron-packager electron-builder

12. Then type "npm run package in the cmd".

13. to create a package install inno setup from this site.
14. And create a run.iss file outside the folder that you want to compress and make a setup 
 [Setup]
AppName=hola
AppVersion=1.0
DefaultDirName={pf}\Win booster-win32-x64
DefaultGroupName=Win booster-win32-x64
OutputDir=Output
OutputBaseFilename=Setup
Compression=lzma2
SolidCompression=yes

[Files]
Source: "Win booster-win32-x64\*"; DestDir: "{app}"; Flags: recursesubdirs

[Icons]
Name: "{commondesktop}\YourAppName"; Filename: "{app}\YourApp.exe"; IconFilename: "{app}\YourApp.exe"
Name: "{group}\YourAppName"; Filename: "{app}\YourApp.exe"; IconFilename: "{app}\YourApp.exe"

open the code using iss and compile and run 
done!